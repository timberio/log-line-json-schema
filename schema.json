{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Official JSON schema for the Timber librarie's log events (https://github.com/timberio)",
  "type": "object",
  "required": ["dt", "message"],
  "additionalProperties": false,
  "properties": {
    "dt": {
      "type": "string",
      "format": "date-time",
      "description": "The date and time at which the log event was generated as a string of the form YYYY-MM-DDTHH:MM:SS.SSSSSSZ"
    },
    "level": {
      "type": "string",
      "enum": ["debug", "info", "warn", "error", "fatal"],
      "description": "The level of the log event message."
    },
    "message": {
      "type": "string",
      "description": "The raw log event message, formatting stripped.",
      "maxLength": 8192
    },
    "tags": {
      "type": "array",
      "description": "An array of tags to be associated with this log line.",
      "minItems": 1,
      "maxItems": 20,
      "items": {
        "type": "string"
      }
    },
    "time_ms": {
      "$ref": "#/definitions/time_ms"
    },
    "context": {
      "type": "object",
      "description": "Contextual metadata about the environment the event takes place in",
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "custom": {
          "$ref": "#/definitions/custom"
        },
        "http": {
          "type": "object",
          "description": "Context about the HTTP request currently being processed (if any)",
          "required": ["method"],
          "additionalProperties": false,
          "properties": {
            "method": {
              "$ref": "#/definitions/http_method"
            },
            "path": {
              "$ref": "#/definitions/http_path"
            },
            "remote_addr": {
              "$ref": "#/definitions/http_remote_addr"
            },
            "request_id": {
              "$ref": "#/definitions/http_request_id"
            }
          }
        },
        "job": {
          "type": "object",
          "description": "Represents a task or job execution, typically for background tasks or jobs.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the job or task.",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "organization": {
          "type": "object",
          "description": "Represents an organization in the platform being logged. The interpretation of \"organization\" is left to the consumer.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the organization",
              "minLength": 1,
              "maxLength": 256
            },
            "name": {
              "type": "string",
              "description": "A display name for the organization",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "platform": {
          "type": "object",
          "description": "Contextual information about the hosting platform (AWS, Google Cloud, Heroku, etc) the application is hosted.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "heroku": {
              "type": "object",
              "description": "Contextual information for the Heroku platform.",
              "required": ["dyno_type", "source"],
              "properties": {
                "dyno_type": {
                  "type": "string",
                  "description": "The dyno type for the process (web, worker, router, etc)",
                  "minLength": 1,
                  "maxLength": 256
                },
                "dyno_id": {
                  "type": "integer",
                  "description": "The dyno ID for the process.",
                  "minimum": 1
                },
                "source": {
                  "type": "string",
                  "description": "The source of the log message. For example, Heroku can send log messages for the web.1 dyno from both within the app and Heroku itself.",
                  "enum": ["app", "heroku"]
                }
              }
            }
          }
        },
        "release": {
          "type": "object",
          "description": "Contextual information on the current release",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "commit_hash": {
              "type": "string",
              "description": "The git commit sha for the deploy",
              "minLength": 1,
              "maxLength": 256
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the release was created, ISO8601 date time."
            },
            "version": {
              "type": "string",
              "description": "Deploy version, can be an unique string. Ex: 1.1.2 or a43fdw",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "runtime": {
          "type": "object",
          "description": "Represents the language runtime details.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "application": {
              "type": "string",
              "description": "The current application name",
              "minLength": 1,
              "maxLength": 256
            },
            "class_name": {
              "type": "string",
              "description": "The current class name, if applicable.",
              "minLength": 1,
              "maxLength": 256
            },
            "file": {
              "type": "string",
              "description": "The current file path from the root of the project.",
              "minLength": 1,
              "maxLength": 1024
            },
            "function": {
              "type": "string",
              "description": "The current function name, if applicable.",
              "minLength": 1,
              "maxLength": 256
            },
            "line": {
              "type": "integer",
              "description": "The current line number with in the file.",
              "minimum": 1
            },
            "module_name": {
              "type": "string",
              "description": "The current module name, if applicable.",
              "minLength": 1,
              "maxLength": 256
            },
            "vm_pid": {
              "type": "string",
              "description": "The logical process ID as defined by the current language, if applicable.",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "session": {
          "type": "object",
          "description": "The user's current session. A session is a way to track a user without the need for authentication. For example, a browser session is generally maintained through a cookie and assigned a unique ID.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique ID of this session.",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "system": {
          "type": "object",
          "description": "Operating system details.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "hostname": {
              "type": "string",
              "description": "The server hostname.",
              "minLength": 1,
              "maxLength": 256
            },
            "pid": {
              "type": "string",
              "description": "The current operating system process ID as defined by the `pid` command in Unix.",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "user": {
          "type": "object",
          "description": "Represents a user in the platform being logged. The interpretation of \"user\" is left to the consumer.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the user.",
              "minLength": 1,
              "maxLength": 256
            },
            "name": {
              "type": "string",
              "description": "A display name for the user.",
              "minLength": 1,
              "maxLength": 256
            },
            "email": {
              "type": "string",
              "description": "An email address for the user. This need not be unique to the user. Note that no validation is performed on this field.",
              "format": "email",
              "minLength": 1,
              "maxLength": 256
            }
          }
        }
      }
    },
    "event": {
      "type": "object",
      "description": "A controlled representation of the event this log line represents.",
      "maxProperties": 1,
      "minProperties": 1,
      "additionalProperties": false,
      "properties": {
        "cpu_sample": {
          "type": "object",
          "description": "A sample of the current server processor usage.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "load_avg_1m": {
              "type": "number",
              "description": "The load average for the processor in the last 1 minute. This reflects the number of CPU tasks that are in the ready queue (i.e. waiting to be processed).",
              "minimum": 0
            },
            "load_avg_5m": {
              "type": "number",
              "description": "The load average for the processor in the last 5 minutes. This reflects the number of CPU tasks that are in the ready queue (i.e. waiting to be processed).",
              "minimum": 0
            },
            "load_avg_15m": {
              "type": "number",
              "description": "The load average for the processor in the last 10 minutes. This reflects the number of CPU tasks that are in the ready queue (i.e. waiting to be processed).",
              "minimum": 0
            }
          }
        },
        "controller_call": {
          "type": "object",
          "description": "Represents the calling of a controller, typically logged immediately after the request is routed.",
          "required": ["controller", "action"],
          "additionalProperties": false,
          "properties": {
            "controller": {
              "type": "string",
              "description": "The name of the controller being called.",
              "minLength": 1,
              "maxLength": 256
            },
            "action": {
              "type": "string",
              "description": "The name of the controller action being called.",
              "minLength": 1,
              "maxLength": 256
            },
            "params_json": {
              "type": "string",
              "description": "A JSON encoded representation of the parsed parameters being sent to the controller.",
              "minLength": 1,
              "maxLength": 8192
            }
          }
        },
        "custom": {
          "$ref": "#/definitions/custom"
        },
        "exception": {
          "type": "object",
          "description": "Exceptions / errors within your application.",
          "required": ["backtrace", "name", "message"],
          "additionalProperties": false,
          "properties": {
            "backtrace": {
              "type": "array",
              "description": "An array of lines, representing the call stack, leading up to the exception.",
              "minItems": 1,
              "maxItems": 10,
              "items": {
                "type": "object",
                "required": ["file", "function", "line"],
                "additionalProperties": false,
                "properties": {
                  "app_name": {
                    "type": "string",
                    "description": "Application name, if applicable. For example, erlang / elixir have multiple apps within the same umbrella project.",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "file": {
                    "type": "string",
                    "description": "The line file path.",
                    "minLength": 1,
                    "maxLength": 1024
                  },
                  "function": {
                    "type": "string",
                    "description": "The calling function name.",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "line": {
                    "type": "integer",
                    "description": "The calling line number.",
                    "minimum": 1
                  }
                }
              }
            },
            "message": {
              "type": "string",
              "description": "The message describing the exception.",
              "minLength": 1,
              "maxLength": 8192
            },
            "name": {
              "type": "string",
              "description": "The name of the exception.",
              "minLength": 1,
              "maxLength": 256
            }
          }
        },
        "http_client_request": {
          "type": "object",
          "description": "Represents an outbound HTTP request from within the application.",
          "required": ["method", "host", "scheme"],
          "additionalProperties": false,
          "properties": {
            "body": {
              "$ref": "#/definitions/http_body"
            },
            "headers": {
              "$ref": "#/definitions/http_headers"
            },
            "headers_json": {
              "$ref": "#/definitions/http_headers_json"
            },
            "host": {
              "$ref": "#/definitions/http_host"
            },
            "method": {
              "$ref": "#/definitions/http_method"
            },
            "path": {
              "$ref": "#/definitions/http_path"
            },
            "port": {
              "$ref": "#/definitions/http_port"
            },
            "query_string": {
              "$ref": "#/definitions/http_query_string"
            },
            "request_id": {
              "$ref": "#/definitions/http_request_id"
            },
            "service_name": {
              "$ref": "#/definitions/http_service_name"
            },
            "scheme": {
              "$ref": "#/definitions/http_scheme"
            }
          }
        },
        "http_client_response": {
          "type": "object",
          "description": "Represents response to an outbound HTTP request from within the application.",
          "required": ["status", "time_ms"],
          "additionalProperties": false,
          "properties": {
            "body": {
              "$ref": "#/definitions/http_body"
            },
            "headers": {
              "$ref": "#/definitions/http_headers"
            },
            "headers_json": {
              "$ref": "#/definitions/http_headers_json"
            },
            "status": {
              "$ref": "#/definitions/http_status"
            },
            "request_id": {
              "$ref": "#/definitions/http_request_id"
            },
            "service_name": {
              "$ref": "#/definitions/http_service_name"
            },
            "time_ms": {
              "$ref": "#/definitions/time_ms"
            }
          }
        },
        "http_server_request": {
          "type": "object",
          "description": "Represents the *reception* of an inbound HTTP request that is being handled by the application.",
          "required": ["method", "host", "scheme"],
          "additionalProperties": false,
          "properties": {
            "body": {
              "$ref": "#/definitions/http_body"
            },
            "headers": {
              "$ref": "#/definitions/http_headers"
            },
            "headers_json": {
              "$ref": "#/definitions/http_headers_json"
            },
            "method": {
              "$ref": "#/definitions/http_method"
            },
            "path": {
              "$ref": "#/definitions/http_path"
            },
            "port": {
              "$ref": "#/definitions/http_port"
            },
            "host": {
              "$ref": "#/definitions/http_host"
            },
            "request_id": {
              "$ref": "#/definitions/http_request_id"
            },
            "scheme": {
              "$ref": "#/definitions/http_scheme"
            },
            "query_string": {
              "$ref": "#/definitions/http_query_string"
            }
          }
        },
        "http_server_response": {
          "type": "object",
          "description": "Represents the *reception* of an inbound HTTP request that is being handled by the application.",
          "required": ["status", "time_ms"],
          "additionalProperties": false,
          "properties": {
            "body": {
              "$ref": "#/definitions/http_body"
            },
            "headers": {
              "$ref": "#/definitions/http_headers"
            },
            "headers_json": {
              "$ref": "#/definitions/http_headers_json"
            },
            "request_id": {
              "$ref": "#/definitions/http_request_id"
            },
            "status": {
              "$ref": "#/definitions/http_status"
            },
            "time_ms": {
              "$ref": "#/definitions/time_ms"
            }
          }
        },
        "memory_sample": {
          "type": "object",
          "description": "A sample of the current server memory usage.",
          "minProperties": 1,
          "additionalProperties": false,
          "properties": {
            "cache_mb": {
              "type": "number",
              "description": "The portion of the memory used for disk cache.",
              "minimum": 0
            },
            "limit_mb": {
              "type": "number",
              "description": "The maximum amount of memory, limit, that can be used before swap is used.",
              "minimum": 0
            },
            "pgpgin": {
              "type": "number",
              "description": "The cumulative total of the pages read from disk. Sudden high variations on this number can indicate short duration spikes in swap usage. The other memory related metrics are point in time snapshots and can miss short spikes.",
              "minimum": 0
            },
            "pgpgout": {
              "type": "number",
              "description": "The cumulative total of the pages written to disk. Sudden high variations on this number can indicate short duration spikes in swap usage. The other memory related metrics are point in time snapshots and can miss short spikes.",
              "minimum": 0
            },
            "rss_mb": {
              "type": "number",
              "description": "The portion of the memory being used by the target application.",
              "minimum": 0
            },
            "swap_mb": {
              "type": "number",
              "description": "The portion of the memory stored on disk. Swap usually indicates a shortage of memory.",
              "minimum": 0
            },
            "total_mb": {
              "type": "number",
              "description": "The sum of the rss, cache, and swap that equals the total memory being used.",
              "minimum": 0
            }
          }
        },
        "sql_query": {
          "type": "object",
          "description": "An outgoing SQL query sent from the application.",
          "required": ["sql", "time_ms"],
          "additionalProperties": false,
          "properties": {
            "sql": {
              "type": "string",
              "description": "The actual SQL statement sent.",
              "minLength": 1,
              "maxLength": 1024
            },
            "time_ms": {
              "$ref": "#/definitions/time_ms"
            }
          }
        },
        "template_render": {
          "type": "object",
          "description": "Rendering a template to be sent to the client via the HTTP response.",
          "required": ["name", "time_ms"],
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the template. This generally includes the path.",
              "minLength": 1,
              "maxLength": 1024
            },
            "time_ms": {
              "$ref": "#/definitions/time_ms"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "custom": {
      "type": "object",
      "description": "Custom properties / data.",
      "minProperties": 1,
      "maxProperties": 1,
      "additionalProperties": {
        "type": "object",
        "minProperties": 1,
        "maxProperties": 100,
        "additionalProperties": true
      }
    },
    "http_body": {
      "type": "string",
      "description": "The body of the HTTP request / response.",
      "minLength": 1,
      "maxLength": 8192
    },
    "http_headers": {
      "type": "object",
      "description": "An object representing *select* HTTP headers that need to be searched or graphed.",
      "minProperties": 1,
      "maxProperties": 100
    },
    "http_headers_json": {
      "type": "string",
      "description": "A string representing *all* HTTP headers, this is solely used for request inspection.",
      "maxLEngth": 8192
    },
    "http_host": {
      "type": "string",
      "description": "The target host of the HTTP request. This may not be the same as the real hostname of the server.",
      "minLength": 1,
      "maxLength": 256
    },
    "http_method": {
      "type": "string",
      "description": "The HTTP method for the request.",
      "enum": ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"]
    },
    "http_path": {
      "type": "string",
      "description": "The path of the HTTP request.",
      "minLength": 1,
      "maxLength": 2048
    },
    "http_port": {
      "type": "integer",
      "description": "The target port of the HTTP request. This may be different than the port the server is listening on.",
      "minimum": 0
    },
    "http_query_string": {
      "type": "string",
      "description": "The query parameters present on the URL.",
      "minLength": 1,
      "maxLength": 2048
    },
    "http_remote_addr": {
      "type": "string",
      "description": "The IP address of the computer that issued the request.",
      "minLength": 1,
      "maxLength": 256
    },
    "http_request_id": {
      "type": "string",
      "description": "An ID that uniquely identifies the request and can be used to trace requests.",
      "minLength": 1,
      "maxLength": 256
    },
    "http_scheme": {
      "type": "string",
      "enum": ["http", "https"],
      "description": "The HTTP request scheme."
    },
    "http_service_name": {
      "type": "string",
      "description": "A short label / name for the service you are sending the request to, ex: elasticsearch",
      "minLength": 1,
      "maxLength": 256
    },
    "http_status": {
      "type": "integer",
      "minimum": 100,
      "maximum": 599,
      "description": "The status as defined by the HTTP status codes."
    },
    "time_ms": {
      "type": "number",
      "minimum": 0,
      "description": "The duration, in fractional milliseconds, that it took to complete this event."
    }
  }
}